swagger: '2.0'
info:
  version: 1.0.0
  title: TourApp
  description: A simple Tour Store API
host: tourapp.mobsoft.aut.bme.hu
schemes:
  - https
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    post:
      operationId: login
      tags:
        - Person
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: username
          in: formData
          description: Username of the person
          required: true
          type: string
        - name: password
          in: formData
          description: Password of the person
          required: true
          type: string
      responses:
        '200':
          description: Return datas of the person
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Invalid credentials
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tours:
    get:
      operationId: findTours
      tags:
        - Tour
      description: |
        Returns all `Tours` of the system
      parameters:
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
        - name: tags
          in: query
          description: Tags used to filter the result
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: List of tours
          schema:
            title: ArrayOfTours
            type: array
            items:
              $ref: '#/definitions/Tour'
        '401':
          description: Session token expired.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      tags:
        - Tour
      description: Create `Tour` object
      parameters:
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
        - name: tour
          in: body
          description: Create tour
          required: true
          schema:
            $ref: '#/definitions/Tour'
      responses:
        '201':
          description: New resource created
          schema:
            type: object
            properties:
              tour_id:
                type: string
                description: Unique identifier representing a specific tour.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Session token expired.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/tours/{id}':
    get:
      operationId: findTourById
      tags:
        - Tour
      description: |
        Gets `Tour` object.
      parameters:
        - name: id
          in: path
          description: Identification of tour
          required: true
          type: string
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Tour'
        '401':
          description: Session token expired.
        '404':
          description: Tour does not exist.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Delete `Tour`
      operationId: deleteTour
      tags:
        - Tour
      parameters:
        - name: id
          in: path
          description: Identification of tour
          required: true
          type: string
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
      responses:
        '204':
          description: Successful delete
        '401':
          description: Session token expired.
        '403':
          description: Users does not have permission
        '404':
          description: Tour does not exist
        '410':
          description: Tour already deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /my_tours:
    get:
      operationId: findMyTours
      tags:
        - Tour
      description: |
        Gets My `Tours` objects.
      parameters:
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
      responses:
        '200':
          description: Return tours of the user
          schema:
            title: ArrayOfTours
            type: array
            items:
              $ref: '#/definitions/Tour'
        '401':
          description: Session token expired.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/tours/{id}/connect':
    post:
      operationId: connectTour
      description: User connect to a `Tour`
      tags:
        - Tour
      parameters:
        - name: id
          in: path
          description: Identification of tour
          required: true
          type: string
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
      responses:
        '200':
          description: Successful connect
          schema:
            type: object
            properties:
              tour_id:
                type: string
                description: Unique identifier representing a specific tour.
              members:
                type: integer
                format: int32
        '401':
          description: Session token expired.
        '403':
          description: You have already joined.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/tours/{id}/disconnect':
    post:
      operationId: disconnectTour
      tags:
        - Tour
      description: User disconnect from a `Tour`
      parameters:
        - name: id
          in: path
          description: Identification of tour
          required: true
          type: string
        - name: X-Auth-Token
          in: header
          description: Authentication of the person
          required: true
          type: string
      responses:
        '200':
          description: Successful disconnect
          schema:
            type: object
            properties:
              tour_id:
                type: string
                description: Unique identifier representing a specific tour.
              members:
                type: integer
                format: int32
        '401':
          description: Session token expired.
        '403':
          description: You have already disconnected.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  Tour:
    type: object
    required:
      - tour_id
      - tour_name
      - category
      - start_date
      - tour_location
      - tour_leader
    properties:
      tour_id:
        type: string
        description: Unique identifier representing a specific tour.
      tour_name:
        type: string
        description: Display name of tour.
      category:
        type: string
        description: 'Category of tour [walking, cycling, water tour, mountain]'
      start_date:
        type: string
        format: date-time
        description: Start date of tour
      difficulty:
        type: string
        description: 'Difficulty of tour [easy, medium, hard]'
      distance:
        type: number
        format: double
        description: Distance of tour
      description:
        type: string
        description: Description of tour.
      tour_location:
        type: string
        description: Location of tour.
      image_url:
        type: string
        description: Image URL representing the tour.
      tour_leader:
        $ref: '#/definitions/User'
      members:
        type: array
        items:
          $ref: '#/definitions/User'
  User:
    type: object
    required:
      - person_id
      - person_name
    properties:
      person_id:
        type: string
        description: Unique identifier representing a specific person.
      person_name:
        type: string
        description: Name of person
      auth_token:
        type: string
        description: Every login generate a new token which identify the person
      expired_date:
        type: string
        format: date-time
        description: Expired date of authorization token
      profile_photo_url:
        type: string
        description: Image URL representing the person.
      age:
        type: integer
        format: int32
        description: Age of the person
      gender:
        type: string
        description: 'Gender of the person [male, female]'
      experience:
        type: string
        description: 'Experience of the person [beginner, advanced, master]'
      my_tours:
        type: array
        items:
          $ref: '#/definitions/Tour'
  ErrorResponse:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
